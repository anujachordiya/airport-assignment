{"version":3,"sources":["components/Pagination.js","components/Search.js","components/checkList.js","components/airportList.js","App.js","reportWebVitals.js","index.js"],"names":["PaginationComponent","total","itemsPerPage","currentPage","onPageChange","pageNeighbours","useState","totalPages","setTotalPages","useEffect","Math","ceil","paginationItems","useMemo","pages","i","push","Pagination","Item","active","onClick","className","Prev","disabled","Next","Search","onSearch","search","setSearch","type","style","borderStyle","placeholder","value","onChange","e","target","types","CheckList","checked","setChecked","map","item","index","currentIndex","indexOf","newChecked","splice","handleToggle","id","label","AirportList","props","comments","setComments","totalItems","setTotalItems","setCurrentPage","fetch","then","res","json","console","log","commentsData","computedComments","filter","comment","name","toLowerCase","includes","length","slice","left","class","icao","iata","elevation","latitude","longitude","page","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a08337ac.chunk.js","sourcesContent":["import React,{useState,useEffect, useMemo} from \"react\";\r\nimport Pagination  from \"react-bootstrap/Pagination\";\r\n//import Pagination from \"react-js-pagination\";\r\n//import '../css/Pagination.css';\r\n\r\nconst PaginationComponent = ({total = 0, itemsPerPage = 10 , currentPage = 1, onPageChange,pageNeighbours = 0 }) =>{\r\n\r\n    const[totalPages,setTotalPages] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        if(total> 0 && itemsPerPage)\r\n            setTotalPages(Math.ceil(total/itemsPerPage));\r\n    },[total,itemsPerPage]);\r\n\r\n    const paginationItems = useMemo( () => {\r\n        const pages = [];\r\n        for(let i=1;i<=totalPages;i++)\r\n        {\r\n            pages.push(\r\n                <Pagination.Item\r\n                    key={i}\r\n                    active ={i===currentPage}\r\n                    onClick = {()=>onPageChange(i)}\r\n                >\r\n                    {i}                    \r\n                </Pagination.Item>\r\n            );\r\n        }\r\n        return pages;\r\n    },[totalPages,currentPage]);\r\n\r\n    if(totalPages === 0) return null;\r\n    return(\r\n        <Pagination className=\"pagination\">\r\n            <Pagination.Prev\r\n            onClick = {() => onPageChange(currentPage -1)}\r\n                        disabled={currentPage===1}/>\r\n            {paginationItems}\r\n            <Pagination.Next   \r\n            onClick = {() => onPageChange(currentPage =1)}\r\n                        disabled={currentPage===totalPages}/>\r\n          \r\n        </Pagination>\r\n        \r\n    )\r\n}\r\n\r\nexport default PaginationComponent;","import React,{useState} from \"react\";\r\n//import '../css/search.css';\r\n\r\nconst Search = ({onSearch}) =>{\r\n    const [search,setSearch] = useState('');\r\n\r\n    const onInputChange = (value) =>{\r\n        setSearch(value);\r\n        onSearch(value);\r\n    }\r\n\r\n\r\n    return(\r\n        <input \r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        style={{ borderStyle:\"none none solid none\"}}\r\n        placeholder=\"Search\"\r\n        value={search}\r\n        onChange = {(e) => onInputChange(e.target.value) }\r\n        />\r\n    )\r\n    \r\n}\r\n\r\nexport default Search;","import React, { useState } from \"react\";\r\nimport '../css/checkList.css';\r\n\r\nconst types= [\r\n    {\r\n        \"id\":1,\r\n        \"type\":\"small\"\r\n    },\r\n    {\r\n        \"id\":2,\r\n        \"type\":\"medium\"\r\n    },\r\n    {\r\n      \"id\":3,\r\n      \"type\":\"large\"\r\n    },\r\n    {\r\n      \"id\":4,\r\n      \"type\":\"Heliport\"\r\n    },\r\n    {\r\n      \"id\":5,\r\n      \"type\":\"Closed\"\r\n    },\r\n    {\r\n      \"id\":6,\r\n      \"type\":\"In your favorites\"\r\n    }\r\n\r\n]\r\n\r\n//console.log(Types);\r\nconst CheckList = ({ active, onChange }) => {\r\n\r\n  const [checked,setChecked] = useState([])\r\n\r\n  const handleToggle = (item) =>{\r\n    const  currentIndex = checked.indexOf(item);\r\n    const newChecked = [...checked];\r\n\r\n    if(currentIndex === -1)\r\n    {\r\n      newChecked.push(item)\r\n    }\r\n    else{\r\n      newChecked.splice(currentIndex,1)\r\n    }\r\n    setChecked(newChecked)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {types.map((item, index) => (\r\n        <label key={item.label}>\r\n          <input\r\n            type=\"checkbox\"\r\n            onChange={()=>handleToggle(item.id)}\r\n          />\r\n         \r\n         \r\n        \r\n        <span className=\"types-checklist\">{item.type}</span>\r\n        </label>\r\n            \r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckList;\r\n","import React ,{useState, useEffect, useMemo} from \"react\";\r\nimport Pagination from './Pagination';\r\nimport Search from \"./Search\";\r\nimport CheckList from \"./checkList\";\r\nimport '../css/airportList.css';\r\n\r\nconst AirportList = (props) =>{\r\n\r\n\r\n\r\n    const [comments, setComments] = useState([]);\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [filtersType, setFiltersType] = useState([]);    \r\n\r\n    const ITEMS_PER_PAGE = 4;\r\n  \r\n\r\n    const getData=()=>{\r\n        fetch('data/airports.json')\r\n          .then(res => res.json())\r\n          .then(json =>{\r\n            console.log(json);\r\n            setComments(json);}\r\n          );\r\n      }\r\n      useEffect(()=>{\r\n        getData()\r\n      },[])\r\n\r\n\r\n\r\n      const commentsData = useMemo(() => {\r\n        let computedComments = comments;\r\n\r\n        //for searching\r\n        if (search) {\r\n            computedComments = computedComments.filter(\r\n                comment =>{\r\n                    return(\r\n                    comment.name.toLowerCase().includes(search.toLowerCase()) ||\r\n                    comment.type.toLowerCase().includes(search.toLowerCase()) \r\n             ) }   );\r\n        }\r\n\r\n        setTotalItems(computedComments.length);\r\n\r\n\r\n        //Current Page slice\r\n        return computedComments.slice(\r\n            (currentPage - 1) * ITEMS_PER_PAGE,\r\n            (currentPage - 1) * ITEMS_PER_PAGE + ITEMS_PER_PAGE\r\n        );\r\n    }, [comments, currentPage, search]);\r\n      \r\n\r\n    return(\r\n        <div className=\"airportList-container\">\r\n            <h1 className=\"title-container\">Filter <span className=\"title\"> airports</span></h1>\r\n            \r\n            <div className=\"search-container\">\r\n                <p>Filter by search</p>    \r\n\r\n                <Search className=\"search\" onSearch={value => {\r\n                                    setSearch(value);\r\n                                    setCurrentPage(1);\r\n                                }}\r\n                />\r\n            </div>\r\n\r\n\r\n            <div className=\"checklist-container\">\r\n                <p className=\"checklist-title\"    style={{ left:\"0\"}}> Type</p>\r\n\r\n                 <CheckList className=\"checklist\" \r\n                 />\r\n            </div>\r\n            \r\n            <div className=\"table table-striped table-responsive\">\r\n            <table class=\"table\">\r\n                    <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>ICAO</th>\r\n                                <th>IATA</th>\r\n                                <th>Elev.</th>\r\n                                <th>Lat.</th>\r\n                                <th>Long.</th>\r\n                                <th>Type</th>\r\n                            </tr>\r\n                        </thead>\r\n                    <tbody>\r\n                        {\r\n\r\n                            commentsData.map(comment =>(<tr>\r\n                                <td>{comment.name}</td>\r\n                                <td>{comment.icao}</td>\r\n                                <td>{comment.iata}</td>\r\n                                <td>{comment.elevation}</td>\r\n                                <td>{comment.latitude}</td>\r\n                                <td>{comment.longitude}</td>\r\n                                <td>{comment.type}</td>\r\n                            </tr>\r\n\r\n                            ))\r\n                        }\r\n\r\n                    </tbody>\r\n                </table>\r\n            \r\n            </div>\r\n            \r\n                <div class=\"pagination-container\"> \r\n                <Pagination total={totalItems}\r\n                                itemsPerPage={ITEMS_PER_PAGE}\r\n                                currentPage={currentPage}\r\n                                onPageChange={page => setCurrentPage(page)}\r\n                    />\r\n        \r\n                </div>\r\n               \r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AirportList;\r\n","import './App.css';\nimport AirportList from './components/airportList';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     \n      <AirportList />\n      \n  \n         \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}